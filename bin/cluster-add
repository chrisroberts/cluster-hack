#!/usr/bin/env bash
# Summary: add new instances to existing cluster

# Defaults
help=""
servers="0"
clients="0"
memory="1GiB"
cpus="1"
image="ubuntu/noble"
consul="0"
vm=""

for arg in "${@}"; do
    shift
    case "${arg}" in
        "--servers") set -- "${@}" "-s" ;;
        "--clients") set -- "${@}" "-c" ;;
        "--memory") set -- "${@}" "-m" ;;
        "--cpus") set -- "${@}" "-C" ;;
        "--image") set -- "${@}" "-i" ;;
        "--consul") set -- "${@}" "-o" ;;
        "--vm") set -- "${@}" "-v" ;;
        "--help") set -- "${@}" "-h" ;;
        *) set -- "${@}" "${arg}" ;;
    esac
done

while getopts "hc:s:m:C:i:o:vA" opt; do
    case "${opt}" in
        "c") clients="${OPTARG}" ;;
        "s") servers="${OPTARG}" ;;
        "C") cpus="${OPTARG}" ;;
        "m") memory="${OPTARG}" ;;
        "i") image="${OPTARG}" ;;
        "o") consul="${OPTARG}" ;;
        "v") vm="1" ;;
        "h") help="1" ;;
        *) help="1" ;;
    esac
done
shift $((OPTIND-1))

csource="${BASH_SOURCE[0]}"
while [ -h "$csource" ] ; do csource="$(readlink "$csource")"; done
root="$( cd -P "$( dirname "$csource" )/" && pwd )" || exit 1

. "${root}/common.bash" || exit

LAUNCH_ARGS=()
if [ -n "${vm}" ]; then
    LAUNCH_ARGS+=("--vm")
fi
LAUNCH_ARGS+=("--config" "limits.memory=${memory}" "--config" "limits.cpu=${cpus}" "--ephemeral" "--profile" "${PROFILE_NAME}" "images:${image}")

# Check if there's anything to add
if [ "${servers}" == "0" ] && [ "${clients}" == "0" ] && [ "${consul}" == "0" ]; then
    help=1
fi

if [ -n "${help}" ]; then
    printf "Usage: %s [options] --servers n --clients n\n" "${SCRIPT_NAME}"
    printf "\t--clients NUM, -c NUM\tNumber of client instances to add\n"
    printf "\t--servers NUM, -s NUM\tNumber of server instances to add\n"
    printf "\t--cpus NUM, -C NUM\tNumber of CPUs to assign instance (default: 1)\n"
    printf "\t--memory MEM, -m MEM\tMaximum memory allocated (default: 1GiB)\n"
    printf "\t--image NAME, -i NAME\tImage for instances\n"
    printf "\t--consul NUM, -o NUM\tNumber of consul servers to add\n"
    printf "\t--vm, -v\t\tUse virtual machine instances\n"
    exit 1
fi

cluster-must-exist

# If consuls are requested, check that cluster has
# consul enabled
if [ "${consul}" -gt "0" ] && [ -z "$(get-instances consul)" ]; then
    failure "Cluster not created with consul, cannot add new consuls"
fi

# Create an identifier for this run that
# will prevent name collisions so we can
# be lazy about naming
ident="$(date '+%s' | sha256sum)"
ident="${ident:0:4}"

pids=()

# Start with adding any new consuls
if [ "${consul}" -gt "0" ]; then
    info "Adding %d new consul server instances..."
    for ((idx=0; idx<"${consul}"; idx++)); do
        launch-consul-instance "consul-${ident}${idx}" "3" &
        pids+=("${!}")
    done
fi

# Add any new nomad servers
if [ "${servers}" -gt "0" ]; then
    info "Adding %d new server instances..."
    for ((idx=0; idx<"${servers}"; idx++)); do
        launch-nomad-server-instance "server-${ident}${idx}" "3" &
        pids+=("${!}")
    done
fi

# Add any new nomad clients
if [ "${clients}" -gt "0" ]; then
    info "Adding %d new client instances..."
    for ((idx=0; idx<"${clients}"; idx++)); do
        launch-nomad-client-instance "client-${ident}${idx}" &
        pids+=("${!}")
    done
fi

result=""

for pid in "${pids[@]}"; do
    if ! wait "${pid}"; then
       result="1"
    fi
done

if [ -n "${result}" ]; then
    failure "Unexpected failure encountered while adding new instances"
fi
