#!/usr/bin/env bash
# Summary: run command on cluster instance(s)

# Defaults
help=""
servers=""
clients=""
consuls=""
vaults=""
instance=""

for arg in "${@}"; do
    shift
    case "${arg}" in
        "--servers") set -- "${@}" "-s" ;;
        "--clients") set -- "${@}" "-c" ;;
        "--consuls") set -- "${@}" "-o" ;;
        "--vaults") set -- "${@}" "-V" ;;
        "--instance") set -- "${@}" "-i" ;;
        "--all") set - "${@}" "-a";;
        "--help") set -- "${@}" "-h";;
        *) set -- "${@}" "${arg}" ;;
    esac
done

while getopts "scoVi:ah" opt; do
    case "${opt}" in
        "c") clients="1" ;;
        "s") servers="1" ;;
        "V") vaults="1" ;;
        "o") consuls="1" ;;
        "i") instance="${OPTARG}" ;;
        "a")
            clients="1"
            servers="1"
            vaults="1"
            consuls="1"
            ;;
        "h") help="1" ;;
        *) help="1" ;;
    esac
done
shift $((OPTIND-1))

csource="${BASH_SOURCE[0]}"
while [ -h "$csource" ] ; do csource="$(readlink "$csource")"; done
root="$( cd -P "$( dirname "$csource" )/" && pwd )" || exit 1

. "${root}/common.bash" || exit 1

if [ -z "${clients}" ] && [ -z "${servers}" ] && [ -z "${instance}" ]; then
    help="1"
fi

if [ -n "${help}" ]; then
    printf "Usage: %s [options] COMMAND\n" "${SCRIPT_NAME}"
    printf "\t--all, -a\t\t\tRun on all instances\n"
    printf "\t--clients, -c\t\t\tRun on client instances\n"
    printf "\t--servers, -s\t\t\tRun on server instances\n"
    printf "\t--instance NAME, -i NAME\tRun on single instance\n"
    exit 1
fi

cluster-must-exist

cmd=("${@}")
pids=()
instances=()

if [ -n "${servers}" ]; then
    readarray -t list < <(get-instances server)
    instances+=("${list[@]}")
fi

if [ -n "${clients}" ]; then
    readarray -t list < <(get-instances client)
    instances+=("${list[@]}")
fi

if [ -n "${consuls}" ]; then
    readarray -t list < <(get-instances consul)
    instances+=("${list[@]}")
fi

if [ -n "${vaults}" ]; then
    readarray -t list < <(get-instances vault)
    instances+=("${list[@]}")
fi

if [ -n "${instance}" ]; then
    instances+=("${instance}")
fi

for i in "${instances[@]}"; do
    run-command "${i}" "${cmd[@]}" &
    pids+=("${!}")
done

result=0
for pid in "${pids[@]}"; do
    if ! wait "${pid}"; then
        result=1;
    fi
done

if [ "${result}" != "0" ]; then
    failure "Errors encountered during command runs"
fi

success "All command runs are complete"
